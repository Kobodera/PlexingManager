#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PlexManagerDevelopment")]
public partial class PlexingFleetDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertCorp(Corp instance);
  partial void UpdateCorp(Corp instance);
  partial void DeleteCorp(Corp instance);
  partial void InsertRule(Rule instance);
  partial void UpdateRule(Rule instance);
  partial void DeleteRule(Rule instance);
  partial void InsertFleet(Fleet instance);
  partial void UpdateFleet(Fleet instance);
  partial void DeleteFleet(Fleet instance);
  partial void InsertPlex(Plex instance);
  partial void UpdatePlex(Plex instance);
  partial void DeletePlex(Plex instance);
  partial void InsertPlexInfo(PlexInfo instance);
  partial void UpdatePlexInfo(PlexInfo instance);
  partial void DeletePlexInfo(PlexInfo instance);
  partial void InsertPlexingPeriod(PlexingPeriod instance);
  partial void UpdatePlexingPeriod(PlexingPeriod instance);
  partial void DeletePlexingPeriod(PlexingPeriod instance);
  partial void InsertPlexUserRole(PlexUserRole instance);
  partial void UpdatePlexUserRole(PlexUserRole instance);
  partial void DeletePlexUserRole(PlexUserRole instance);
  partial void InsertPlexUser(PlexUser instance);
  partial void UpdatePlexUser(PlexUser instance);
  partial void DeletePlexUser(PlexUser instance);
  #endregion
	
	public PlexingFleetDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PlexManagerDevelopmentConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public PlexingFleetDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public PlexingFleetDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public PlexingFleetDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public PlexingFleetDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Corp> Corps
	{
		get
		{
			return this.GetTable<Corp>();
		}
	}
	
	public System.Data.Linq.Table<Rule> Rules
	{
		get
		{
			return this.GetTable<Rule>();
		}
	}
	
	public System.Data.Linq.Table<Fleet> Fleets
	{
		get
		{
			return this.GetTable<Fleet>();
		}
	}
	
	public System.Data.Linq.Table<Plex> Plexes
	{
		get
		{
			return this.GetTable<Plex>();
		}
	}
	
	public System.Data.Linq.Table<PlexInfo> PlexInfos
	{
		get
		{
			return this.GetTable<PlexInfo>();
		}
	}
	
	public System.Data.Linq.Table<PlexingPeriod> PlexingPeriods
	{
		get
		{
			return this.GetTable<PlexingPeriod>();
		}
	}
	
	public System.Data.Linq.Table<PlexUserRole> PlexUserRoles
	{
		get
		{
			return this.GetTable<PlexUserRole>();
		}
	}
	
	public System.Data.Linq.Table<PlexUser> PlexUsers
	{
		get
		{
			return this.GetTable<PlexUser>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Corps")]
public partial class Corp : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CorpId;
	
	private string _CorpName;
	
	private string _CorpTag;
	
	private int _AllianceId;
	
	private string _AllianceName;
	
	private string _AllianceTag;
	
	private bool _Enabled;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCorpIdChanging(int value);
    partial void OnCorpIdChanged();
    partial void OnCorpNameChanging(string value);
    partial void OnCorpNameChanged();
    partial void OnCorpTagChanging(string value);
    partial void OnCorpTagChanged();
    partial void OnAllianceIdChanging(int value);
    partial void OnAllianceIdChanged();
    partial void OnAllianceNameChanging(string value);
    partial void OnAllianceNameChanged();
    partial void OnAllianceTagChanging(string value);
    partial void OnAllianceTagChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    #endregion
	
	public Corp()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorpId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int CorpId
	{
		get
		{
			return this._CorpId;
		}
		set
		{
			if ((this._CorpId != value))
			{
				this.OnCorpIdChanging(value);
				this.SendPropertyChanging();
				this._CorpId = value;
				this.SendPropertyChanged("CorpId");
				this.OnCorpIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorpName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string CorpName
	{
		get
		{
			return this._CorpName;
		}
		set
		{
			if ((this._CorpName != value))
			{
				this.OnCorpNameChanging(value);
				this.SendPropertyChanging();
				this._CorpName = value;
				this.SendPropertyChanged("CorpName");
				this.OnCorpNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorpTag", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string CorpTag
	{
		get
		{
			return this._CorpTag;
		}
		set
		{
			if ((this._CorpTag != value))
			{
				this.OnCorpTagChanging(value);
				this.SendPropertyChanging();
				this._CorpTag = value;
				this.SendPropertyChanged("CorpTag");
				this.OnCorpTagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllianceId", DbType="Int NOT NULL")]
	public int AllianceId
	{
		get
		{
			return this._AllianceId;
		}
		set
		{
			if ((this._AllianceId != value))
			{
				this.OnAllianceIdChanging(value);
				this.SendPropertyChanging();
				this._AllianceId = value;
				this.SendPropertyChanged("AllianceId");
				this.OnAllianceIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllianceName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string AllianceName
	{
		get
		{
			return this._AllianceName;
		}
		set
		{
			if ((this._AllianceName != value))
			{
				this.OnAllianceNameChanging(value);
				this.SendPropertyChanging();
				this._AllianceName = value;
				this.SendPropertyChanged("AllianceName");
				this.OnAllianceNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllianceTag", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string AllianceTag
	{
		get
		{
			return this._AllianceTag;
		}
		set
		{
			if ((this._AllianceTag != value))
			{
				this.OnAllianceTagChanging(value);
				this.SendPropertyChanging();
				this._AllianceTag = value;
				this.SendPropertyChanged("AllianceTag");
				this.OnAllianceTagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
	public bool Enabled
	{
		get
		{
			return this._Enabled;
		}
		set
		{
			if ((this._Enabled != value))
			{
				this.OnEnabledChanging(value);
				this.SendPropertyChanging();
				this._Enabled = value;
				this.SendPropertyChanged("Enabled");
				this.OnEnabledChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rules")]
public partial class Rule : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _RuleId;
	
	private string _RuleName;
	
	private System.Nullable<int> _Id;
	
	private System.Nullable<bool> _Allowed;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRuleIdChanging(int value);
    partial void OnRuleIdChanged();
    partial void OnRuleNameChanging(string value);
    partial void OnRuleNameChanged();
    partial void OnIdChanging(System.Nullable<int> value);
    partial void OnIdChanged();
    partial void OnAllowedChanging(System.Nullable<bool> value);
    partial void OnAllowedChanged();
    #endregion
	
	public Rule()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RuleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int RuleId
	{
		get
		{
			return this._RuleId;
		}
		set
		{
			if ((this._RuleId != value))
			{
				this.OnRuleIdChanging(value);
				this.SendPropertyChanging();
				this._RuleId = value;
				this.SendPropertyChanged("RuleId");
				this.OnRuleIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RuleName", DbType="NVarChar(200)")]
	public string RuleName
	{
		get
		{
			return this._RuleName;
		}
		set
		{
			if ((this._RuleName != value))
			{
				this.OnRuleNameChanging(value);
				this.SendPropertyChanging();
				this._RuleName = value;
				this.SendPropertyChanged("RuleName");
				this.OnRuleNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int")]
	public System.Nullable<int> Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Allowed", DbType="Bit")]
	public System.Nullable<bool> Allowed
	{
		get
		{
			return this._Allowed;
		}
		set
		{
			if ((this._Allowed != value))
			{
				this.OnAllowedChanging(value);
				this.SendPropertyChanging();
				this._Allowed = value;
				this.SendPropertyChanged("Allowed");
				this.OnAllowedChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fleets")]
public partial class Fleet : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _FcId;
	
	private string _Participants;
	
	private string _Comments;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFcIdChanging(int value);
    partial void OnFcIdChanged();
    partial void OnParticipantsChanging(string value);
    partial void OnParticipantsChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    #endregion
	
	public Fleet()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FcId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int FcId
	{
		get
		{
			return this._FcId;
		}
		set
		{
			if ((this._FcId != value))
			{
				this.OnFcIdChanging(value);
				this.SendPropertyChanging();
				this._FcId = value;
				this.SendPropertyChanged("FcId");
				this.OnFcIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Participants", DbType="NVarChar(MAX)")]
	public string Participants
	{
		get
		{
			return this._Participants;
		}
		set
		{
			if ((this._Participants != value))
			{
				this.OnParticipantsChanging(value);
				this.SendPropertyChanging();
				this._Participants = value;
				this.SendPropertyChanged("Participants");
				this.OnParticipantsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(2000)")]
	public string Comments
	{
		get
		{
			return this._Comments;
		}
		set
		{
			if ((this._Comments != value))
			{
				this.OnCommentsChanging(value);
				this.SendPropertyChanging();
				this._Comments = value;
				this.SendPropertyChanged("Comments");
				this.OnCommentsChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Plexes")]
public partial class Plex : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PlexId;
	
	private int _FCId;
	
	private int _PlexInfoId;
	
	private int _PlexingPeriodId;
	
	private string _Participants;
	
	private System.Nullable<System.DateTime> _PlexingDate;
	
	private int _CorpId;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlexIdChanging(int value);
    partial void OnPlexIdChanged();
    partial void OnFCIdChanging(int value);
    partial void OnFCIdChanged();
    partial void OnPlexInfoIdChanging(int value);
    partial void OnPlexInfoIdChanged();
    partial void OnPlexingPeriodIdChanging(int value);
    partial void OnPlexingPeriodIdChanged();
    partial void OnParticipantsChanging(string value);
    partial void OnParticipantsChanged();
    partial void OnPlexingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPlexingDateChanged();
    partial void OnCorpIdChanging(int value);
    partial void OnCorpIdChanged();
    #endregion
	
	public Plex()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlexId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PlexId
	{
		get
		{
			return this._PlexId;
		}
		set
		{
			if ((this._PlexId != value))
			{
				this.OnPlexIdChanging(value);
				this.SendPropertyChanging();
				this._PlexId = value;
				this.SendPropertyChanged("PlexId");
				this.OnPlexIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FCId", DbType="Int NOT NULL")]
	public int FCId
	{
		get
		{
			return this._FCId;
		}
		set
		{
			if ((this._FCId != value))
			{
				this.OnFCIdChanging(value);
				this.SendPropertyChanging();
				this._FCId = value;
				this.SendPropertyChanged("FCId");
				this.OnFCIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlexInfoId", DbType="Int NOT NULL")]
	public int PlexInfoId
	{
		get
		{
			return this._PlexInfoId;
		}
		set
		{
			if ((this._PlexInfoId != value))
			{
				this.OnPlexInfoIdChanging(value);
				this.SendPropertyChanging();
				this._PlexInfoId = value;
				this.SendPropertyChanged("PlexInfoId");
				this.OnPlexInfoIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlexingPeriodId", DbType="Int NOT NULL")]
	public int PlexingPeriodId
	{
		get
		{
			return this._PlexingPeriodId;
		}
		set
		{
			if ((this._PlexingPeriodId != value))
			{
				this.OnPlexingPeriodIdChanging(value);
				this.SendPropertyChanging();
				this._PlexingPeriodId = value;
				this.SendPropertyChanged("PlexingPeriodId");
				this.OnPlexingPeriodIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Participants", DbType="NVarChar(MAX)")]
	public string Participants
	{
		get
		{
			return this._Participants;
		}
		set
		{
			if ((this._Participants != value))
			{
				this.OnParticipantsChanging(value);
				this.SendPropertyChanging();
				this._Participants = value;
				this.SendPropertyChanged("Participants");
				this.OnParticipantsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlexingDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> PlexingDate
	{
		get
		{
			return this._PlexingDate;
		}
		set
		{
			if ((this._PlexingDate != value))
			{
				this.OnPlexingDateChanging(value);
				this.SendPropertyChanging();
				this._PlexingDate = value;
				this.SendPropertyChanged("PlexingDate");
				this.OnPlexingDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorpId", DbType="Int NOT NULL")]
	public int CorpId
	{
		get
		{
			return this._CorpId;
		}
		set
		{
			if ((this._CorpId != value))
			{
				this.OnCorpIdChanging(value);
				this.SendPropertyChanging();
				this._CorpId = value;
				this.SendPropertyChanged("CorpId");
				this.OnCorpIdChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlexInfos")]
public partial class PlexInfo : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PlexId;
	
	private string _Name;
	
	private int _Points;
	
	private System.Nullable<int> _CorpId;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlexIdChanging(int value);
    partial void OnPlexIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPointsChanging(int value);
    partial void OnPointsChanged();
    partial void OnCorpIdChanging(System.Nullable<int> value);
    partial void OnCorpIdChanged();
    #endregion
	
	public PlexInfo()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlexId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PlexId
	{
		get
		{
			return this._PlexId;
		}
		set
		{
			if ((this._PlexId != value))
			{
				this.OnPlexIdChanging(value);
				this.SendPropertyChanging();
				this._PlexId = value;
				this.SendPropertyChanged("PlexId");
				this.OnPlexIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Points", DbType="Int NOT NULL")]
	public int Points
	{
		get
		{
			return this._Points;
		}
		set
		{
			if ((this._Points != value))
			{
				this.OnPointsChanging(value);
				this.SendPropertyChanging();
				this._Points = value;
				this.SendPropertyChanged("Points");
				this.OnPointsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorpId", DbType="Int")]
	public System.Nullable<int> CorpId
	{
		get
		{
			return this._CorpId;
		}
		set
		{
			if ((this._CorpId != value))
			{
				this.OnCorpIdChanging(value);
				this.SendPropertyChanging();
				this._CorpId = value;
				this.SendPropertyChanged("CorpId");
				this.OnCorpIdChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlexingPeriods")]
public partial class PlexingPeriod : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PlexingPeriodId;
	
	private System.Nullable<System.DateTime> _FromDate;
	
	private System.Nullable<System.DateTime> _ToDate;
	
	private System.Nullable<double> _PayoutSum;
	
	private System.Nullable<double> _CorpTax;
	
	private System.Nullable<bool> _Payed;
	
	private System.Nullable<double> _IskPerPoint;
	
	private System.Nullable<double> _IskPerPointAfterTax;
	
	private System.Nullable<double> _Points;
	
	private int _CorpId;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlexingPeriodIdChanging(int value);
    partial void OnPlexingPeriodIdChanged();
    partial void OnFromDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFromDateChanged();
    partial void OnToDateChanging(System.Nullable<System.DateTime> value);
    partial void OnToDateChanged();
    partial void OnPayoutSumChanging(System.Nullable<double> value);
    partial void OnPayoutSumChanged();
    partial void OnCorpTaxChanging(System.Nullable<double> value);
    partial void OnCorpTaxChanged();
    partial void OnPayedChanging(System.Nullable<bool> value);
    partial void OnPayedChanged();
    partial void OnIskPerPointChanging(System.Nullable<double> value);
    partial void OnIskPerPointChanged();
    partial void OnIskPerPointAfterTaxChanging(System.Nullable<double> value);
    partial void OnIskPerPointAfterTaxChanged();
    partial void OnPointsChanging(System.Nullable<double> value);
    partial void OnPointsChanged();
    partial void OnCorpIdChanging(int value);
    partial void OnCorpIdChanged();
    #endregion
	
	public PlexingPeriod()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlexingPeriodId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PlexingPeriodId
	{
		get
		{
			return this._PlexingPeriodId;
		}
		set
		{
			if ((this._PlexingPeriodId != value))
			{
				this.OnPlexingPeriodIdChanging(value);
				this.SendPropertyChanging();
				this._PlexingPeriodId = value;
				this.SendPropertyChanged("PlexingPeriodId");
				this.OnPlexingPeriodIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> FromDate
	{
		get
		{
			return this._FromDate;
		}
		set
		{
			if ((this._FromDate != value))
			{
				this.OnFromDateChanging(value);
				this.SendPropertyChanging();
				this._FromDate = value;
				this.SendPropertyChanged("FromDate");
				this.OnFromDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ToDate
	{
		get
		{
			return this._ToDate;
		}
		set
		{
			if ((this._ToDate != value))
			{
				this.OnToDateChanging(value);
				this.SendPropertyChanging();
				this._ToDate = value;
				this.SendPropertyChanged("ToDate");
				this.OnToDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayoutSum", DbType="Float")]
	public System.Nullable<double> PayoutSum
	{
		get
		{
			return this._PayoutSum;
		}
		set
		{
			if ((this._PayoutSum != value))
			{
				this.OnPayoutSumChanging(value);
				this.SendPropertyChanging();
				this._PayoutSum = value;
				this.SendPropertyChanged("PayoutSum");
				this.OnPayoutSumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorpTax", DbType="Float")]
	public System.Nullable<double> CorpTax
	{
		get
		{
			return this._CorpTax;
		}
		set
		{
			if ((this._CorpTax != value))
			{
				this.OnCorpTaxChanging(value);
				this.SendPropertyChanging();
				this._CorpTax = value;
				this.SendPropertyChanged("CorpTax");
				this.OnCorpTaxChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payed", DbType="Bit")]
	public System.Nullable<bool> Payed
	{
		get
		{
			return this._Payed;
		}
		set
		{
			if ((this._Payed != value))
			{
				this.OnPayedChanging(value);
				this.SendPropertyChanging();
				this._Payed = value;
				this.SendPropertyChanged("Payed");
				this.OnPayedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IskPerPoint", DbType="Float")]
	public System.Nullable<double> IskPerPoint
	{
		get
		{
			return this._IskPerPoint;
		}
		set
		{
			if ((this._IskPerPoint != value))
			{
				this.OnIskPerPointChanging(value);
				this.SendPropertyChanging();
				this._IskPerPoint = value;
				this.SendPropertyChanged("IskPerPoint");
				this.OnIskPerPointChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IskPerPointAfterTax", DbType="Float")]
	public System.Nullable<double> IskPerPointAfterTax
	{
		get
		{
			return this._IskPerPointAfterTax;
		}
		set
		{
			if ((this._IskPerPointAfterTax != value))
			{
				this.OnIskPerPointAfterTaxChanging(value);
				this.SendPropertyChanging();
				this._IskPerPointAfterTax = value;
				this.SendPropertyChanged("IskPerPointAfterTax");
				this.OnIskPerPointAfterTaxChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Points", DbType="Float")]
	public System.Nullable<double> Points
	{
		get
		{
			return this._Points;
		}
		set
		{
			if ((this._Points != value))
			{
				this.OnPointsChanging(value);
				this.SendPropertyChanging();
				this._Points = value;
				this.SendPropertyChanged("Points");
				this.OnPointsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorpId", DbType="Int NOT NULL")]
	public int CorpId
	{
		get
		{
			return this._CorpId;
		}
		set
		{
			if ((this._CorpId != value))
			{
				this.OnCorpIdChanging(value);
				this.SendPropertyChanging();
				this._CorpId = value;
				this.SendPropertyChanged("CorpId");
				this.OnCorpIdChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlexUserRoles")]
public partial class PlexUserRole : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CharacterId;
	
	private string _Roles;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCharacterIdChanging(int value);
    partial void OnCharacterIdChanged();
    partial void OnRolesChanging(string value);
    partial void OnRolesChanged();
    #endregion
	
	public PlexUserRole()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharacterId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int CharacterId
	{
		get
		{
			return this._CharacterId;
		}
		set
		{
			if ((this._CharacterId != value))
			{
				this.OnCharacterIdChanging(value);
				this.SendPropertyChanging();
				this._CharacterId = value;
				this.SendPropertyChanged("CharacterId");
				this.OnCharacterIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Roles", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
	public string Roles
	{
		get
		{
			return this._Roles;
		}
		set
		{
			if ((this._Roles != value))
			{
				this.OnRolesChanging(value);
				this.SendPropertyChanging();
				this._Roles = value;
				this.SendPropertyChanged("Roles");
				this.OnRolesChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlexUsers")]
public partial class PlexUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CharacterId;
	
	private string _CharacterName;
	
	private string _Password;
	
	private int _CorpId;
	
	private string _CorpName;
	
	private int _AllianceId;
	
	private string _AllianceName;
	
	private bool _Enabled;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCharacterIdChanging(int value);
    partial void OnCharacterIdChanged();
    partial void OnCharacterNameChanging(string value);
    partial void OnCharacterNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCorpIdChanging(int value);
    partial void OnCorpIdChanged();
    partial void OnCorpNameChanging(string value);
    partial void OnCorpNameChanged();
    partial void OnAllianceIdChanging(int value);
    partial void OnAllianceIdChanged();
    partial void OnAllianceNameChanging(string value);
    partial void OnAllianceNameChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    #endregion
	
	public PlexUser()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharacterId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int CharacterId
	{
		get
		{
			return this._CharacterId;
		}
		set
		{
			if ((this._CharacterId != value))
			{
				this.OnCharacterIdChanging(value);
				this.SendPropertyChanging();
				this._CharacterId = value;
				this.SendPropertyChanged("CharacterId");
				this.OnCharacterIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharacterName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string CharacterName
	{
		get
		{
			return this._CharacterName;
		}
		set
		{
			if ((this._CharacterName != value))
			{
				this.OnCharacterNameChanging(value);
				this.SendPropertyChanging();
				this._CharacterName = value;
				this.SendPropertyChanged("CharacterName");
				this.OnCharacterNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorpId", DbType="Int NOT NULL")]
	public int CorpId
	{
		get
		{
			return this._CorpId;
		}
		set
		{
			if ((this._CorpId != value))
			{
				this.OnCorpIdChanging(value);
				this.SendPropertyChanging();
				this._CorpId = value;
				this.SendPropertyChanged("CorpId");
				this.OnCorpIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorpName", DbType="NVarChar(200)")]
	public string CorpName
	{
		get
		{
			return this._CorpName;
		}
		set
		{
			if ((this._CorpName != value))
			{
				this.OnCorpNameChanging(value);
				this.SendPropertyChanging();
				this._CorpName = value;
				this.SendPropertyChanged("CorpName");
				this.OnCorpNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllianceId", DbType="Int NOT NULL")]
	public int AllianceId
	{
		get
		{
			return this._AllianceId;
		}
		set
		{
			if ((this._AllianceId != value))
			{
				this.OnAllianceIdChanging(value);
				this.SendPropertyChanging();
				this._AllianceId = value;
				this.SendPropertyChanged("AllianceId");
				this.OnAllianceIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllianceName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string AllianceName
	{
		get
		{
			return this._AllianceName;
		}
		set
		{
			if ((this._AllianceName != value))
			{
				this.OnAllianceNameChanging(value);
				this.SendPropertyChanging();
				this._AllianceName = value;
				this.SendPropertyChanged("AllianceName");
				this.OnAllianceNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
	public bool Enabled
	{
		get
		{
			return this._Enabled;
		}
		set
		{
			if ((this._Enabled != value))
			{
				this.OnEnabledChanging(value);
				this.SendPropertyChanging();
				this._Enabled = value;
				this.SendPropertyChanged("Enabled");
				this.OnEnabledChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
